@model BikeCommunitySite.Models.DestinationModel.Place

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">

    <style>
        #map {
            height: 400px;
        }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    <script>

        var map;
        var service;
        var infowindow;

        function initialize() {
            var place = new google.maps.LatLng( @Model.lat, @Model.lon);

            map = new google.maps.Map(document.getElementById('map'), {
                center: place,
                zoom: 8
            });
            var geocoder = new google.maps.geocoder;
            var infowindow = new google.maps.infowindow;
            var bikeLayer = new google.maps.BicyclingLayer();
            bikeLayer.setMap(map);

            document.getElementById('map').addEventListener('load', function () {
                geocodeLatLng(geocoder, map, infowindow);
            });
        }

        function geocodeLatLng(geocoder, map, infowindow) {
            var latlng = { lat: @Model.lat, lng: @Model.lon };
            geocoder.geocode({ 'location': latlng }, function (results, status) {
                if (status === 'OK') {
                    if (results[0]) {
                        map.setZoom(11);
                        var marker = new google.maps.Marker({
                            position: latlng,
                            map: map
                        });
                        infowindow.setContent(results[0].formatted_address);
                        infowindow.open(map, marker);
                    } else {
                        window.alert('No results found');
                    }
                } else {
                    window.alert('Geocoder failed due to: ' + status);
                }
            });
        }
        //function callback(results, status) {
        //    if (status == google.maps.places.PlacesServiceStatus.OK) {
        //        for (var i = 0; i < results.length; i++) {
        //            var mark = results[i];
        //            createMarker(results[i]);
        //        }
        //    }
        //}

    </script>
</head>
<body>
    <div class="row">
        <div class="box">
            <div class="col-lg-12">
                <hr>
                <h2 class="intro-text text-center">
                    @Model.name
                    <strong>@Model.city, @Model.state</strong>
                </h2>
                <hr>

                <div id="map"></div>
                <script async defer
                        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBgSD6hkVYX4myK7K7Od7UUMPA3i0ijS6E&libraries=places">
                </script>

                <hr class="visible-xs">

                @*<img src="https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=&key=" />*@

                @foreach (var item in Model.activities)
            {
                    <p><a href="@item.url" target="_blank">Website</a></p>
                    <p>Rating: @item.rating</p>
                    <p>Length: @item.length</p>

                }
                <p>Description:</p>
                <p>@Model.description</p>
            </div>
            <div>
                <a href="@Url.Action("Destinations", "Home")" class="btn btn-primary" role="button">Back to List</a>
            </div>
        </div>
    </div>
</body>
</html>
